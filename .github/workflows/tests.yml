name: Tests

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['20.x']

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: acquisitions_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        env:
          NODE_ENV: test
          NODE_OPTIONS: --experimental-vm-modules
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/acquisitions_test
          JWT_SECRET: test_jwt_secret_key
          ARCJET_KEY: test_arcjet_key
        run: |
          echo "::group::Running Tests"
          if ! npm test; then
            echo "::error::Some tests failed. Please check the test output above."
            echo "::notice::Fix failing tests before merging."
            exit 1
          fi
          echo "::endgroup::"

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports-${{ matrix.node-version }}
          path: coverage/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          echo "## Test Results 🧪" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f coverage/lcov-report/index.html ]; then
            echo "### Coverage Report 📊" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Coverage reports have been generated and uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Extract coverage percentage if available
            if [ -f coverage/coverage-summary.json ]; then
              echo "```json" >> $GITHUB_STEP_SUMMARY
              cat coverage/coverage-summary.json >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "```" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "### ⚠️ Coverage Report Not Found" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Coverage reports could not be generated. Check test configuration." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Environment" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: test" >> $GITHUB_STEP_SUMMARY
          echo "- Database: PostgreSQL 15" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some tests failed. Please review the logs above." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Annotate test failures
        if: failure()
        run: |
          echo "::error::Test suite failed. Please check the following:"
          echo "::error::1. Ensure all test dependencies are properly installed"
          echo "::error::2. Verify database connection and schema"
          echo "::error::3. Check for any breaking changes in the codebase"
          echo "::notice::Run 'npm test' locally to debug failing tests"
